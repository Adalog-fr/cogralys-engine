MATCH (l:Location)<-[:LOCATED_IN]-(v:A_VARIABLE_DECLARATION)<-[:IS_ENCLOSED_IN]-(:A_DEFINING_IDENTIFIER)<-[:CORRESPONDING_NAME_DEFINITION]-(:AN_IDENTIFIER)-[:CORRESPONDING_ASSIGNATION]->(:AN_ASSIGNMENT_STATEMENT)
RETURN v as elt, l as VARIABLE_LOCATION, FALSE AS isRead, TRUE AS isWrite
  ORDER BY VARIABLE_LOCATION.filename, VARIABLE_LOCATION.line, VARIABLE_LOCATION.column
UNION
MATCH (v:A_VARIABLE_DECLARATION)<-[:IS_ENCLOSED_IN]-(:A_DEFINING_IDENTIFIER)<-[:CORRESPONDING_NAME_DEFINITION]-(i:AN_IDENTIFIER)-[:CORRESPONDING_ASSIGNATION]->(:AN_ASSIGNMENT_STATEMENT)
MATCH (i)-[:CORRESPONDING_INSTANCIATION]->(p)
MATCH (l:Location)<-[:LOCATED_IN]-(p)
RETURN p as elt, l as VARIABLE_LOCATION, FALSE AS isRead, TRUE AS isWrite
  ORDER BY VARIABLE_LOCATION.filename, VARIABLE_LOCATION.line, VARIABLE_LOCATION.column
UNION
MATCH (v:A_VARIABLE_DECLARATION)<-[:IS_ENCLOSED_IN]-(:A_DEFINING_IDENTIFIER)<-[:CORRESPONDING_NAME_DEFINITION]-(i:AN_IDENTIFIER)-[:CORRESPONDING_ASSIGNATION]->(:AN_ASSIGNMENT_STATEMENT)
MATCH (v)-[:IS_ENCLOSED_IN]->()-[:IS_ENCLOSED_IN]-(:A_GENERIC_PACKAGE_DECLARATION)<-[:IS_ENCLOSED_IN]-(:Public_Part)<-[:IS_ENCLOSED_IN]-(:A_DEFINING_IDENTIFIER)<-[:CORRESPONDING_NAME_DEFINITION]-(:AN_IDENTIFIER)-[:IS_ENCLOSED_IN]->(p)
MATCH (l:Location)<-[:LOCATED_IN]-(p)
RETURN p as elt, l as VARIABLE_LOCATION, FALSE AS isRead, TRUE AS isWrite
  ORDER BY VARIABLE_LOCATION.filename, VARIABLE_LOCATION.line, VARIABLE_LOCATION.column
UNION
MATCH (:A_VARIABLE_DECLARATION)<-[:IS_ENCLOSED_IN]-(v:A_DEFINING_IDENTIFIER)<-[:CORRESPONDING_NAME_DEFINITION]-(i:AN_IDENTIFIER)<-[:CORRESPONDING_ACTUAL_PARAMETER]-(p:A_PARAMETER_ASSOCIATION)-[:IS_ENCLOSED_IN]->(:User_Parameters)
MATCH (v)-[:LOCATED_IN]->(l:Location)
MATCH (p)-[:CORRESPONDING_PARAMETER_SPECIFICATION]->(s:A_PARAMETER_SPECIFICATION)
RETURN p AS elt, l AS VARIABLE_LOCATION,
       CASE
         WHEN "A_DEFAULT_IN_MODE" IN labels(s) OR "AN_IN_MODE" IN labels(s) OR "AN_IN_OUT_MODE" IN labels(s) THEN TRUE
         ELSE FALSE
         END AS isRead,
       CASE
         WHEN "AN_OUT_MODE" IN labels(s) OR "AN_IN_OUT_MODE" IN labels(s) THEN TRUE
         ELSE FALSE
         END AS isWrite
  ORDER BY VARIABLE_LOCATION.filename, VARIABLE_LOCATION.line, VARIABLE_LOCATION.column
