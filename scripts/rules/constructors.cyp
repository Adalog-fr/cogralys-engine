// First, we match every function decl that return a specific type
MATCH (function:A_FUNCTION_DECLARATION|A_FUNCTION_RENAMING_DECLARATION|AN_EXPRESSION_FUNCTION_DECLARATION)<-[:IS_ENCLOSED_IN]-(:AN_IDENTIFIER)-[:CORRESPONDING_NAME_DEFINITION]->()-[:IS_ENCLOSED_IN]->(typeDef)-[:CORRESPONDING_TYPE_DECLARATION_VIEW]->(:A_TAGGED_RECORD_TYPE_DEFINITION|A_TAGGED_PRIVATE_TYPE_DEFINITION|A_TAGGED_INCOMPLETE_TYPE_DECLARATION|A_DERIVED_RECORD_EXTENSION_DEFINITION)
// RETURN function, typeDef

OPTIONAL MATCH (function)<-[:IS_ENCLOSED_IN]-(:A_PARAMETER_SPECIFICATION)<-[:IS_ENCLOSED_IN]-(:AN_IDENTIFIER)-[:CORRESPONDING_NAME_DEFINITION]->()-[:IS_ENCLOSED_IN]->(parmType:A_DECLARATION)
WITH collect(parmType) as functionParams,
function, typeDef
MATCH (function)
WHERE NOT apoc.coll.contains (functionParams, typeDef)

// RETURN function, typeDef
RETURN function
ORDER BY function.filename, function.line, function.column
